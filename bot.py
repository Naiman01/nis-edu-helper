import telebot
from telebot import types
import re
import os
import json

TOKEN = "7971738148:AAHzMoMs0Zve7p5mce_nizxD98EWnh5Dpsk"
CHANNEL_ID = "@NIS_TG"

bot = telebot.TeleBot(TOKEN)

DATA_FILE = "lesson_schedules.json"

# --- –ó–∞–≥—Ä—É–∂–∞–µ–º/—Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π ---
if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        lesson_schedules = json.load(f)
else:
    lesson_schedules = {}

def save_schedules():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(lesson_schedules, f, ensure_ascii=False, indent=4)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ ---
@bot.channel_post_handler(content_types=['document'])
def handle_new_schedule(message):
    if message.chat.username == CHANNEL_ID.lstrip("@"):
        file_name = message.document.file_name
        match = re.search(r"(\d{1,2})\s*“õ–∞–∑–∞–Ω", file_name.lower())
        if match:
            day = int(match.group(1))
            date_str = f"{day:02d}.10.2025"
            file_id = message.document.file_id
            lesson_schedules[date_str] = file_id
            save_schedules()
            print(f"[‚úÖ] –î–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {date_str}")
        else:
            print(f"[‚ö†Ô∏è] –§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞—Ç—É: {file_name}")

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"))
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç! –Ø NISHELP ü§ñ\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:",
                     reply_markup=markup)

# --- –ü–æ–¥–º–µ–Ω—é "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" ---
@bot.message_handler(func=lambda m: m.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
def show_schedule_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üìò –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –°–û–†"))
    markup.add(types.KeyboardButton("üìó –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –°–û–ß"))
    markup.add(types.KeyboardButton("üìô –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤"))
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"), types.KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", reply_markup=markup)

# --- –ü–æ–¥–º–µ–Ω—é "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤" ---
@bot.message_handler(func=lambda m: m.text == "üìô –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤")
def show_lessons_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    days = [
        "üóì 20.10.2025 ‚Äî –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
        "üóì 21.10.2025 ‚Äî –í—Ç–æ—Ä–Ω–∏–∫",
        "üóì 22.10.2025 ‚Äî –°—Ä–µ–¥–∞",
        "üóì 23.10.2025 ‚Äî –ß–µ—Ç–≤–µ—Ä–≥",
        "üóì 24.10.2025 ‚Äî –ü—è—Ç–Ω–∏—Ü–∞",
        "üóì 25.10.2025 ‚Äî –°—É–±–±–æ—Ç–∞"
    ]
    for d in days:
        markup.add(types.KeyboardButton(d))
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"), types.KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:", reply_markup=markup)

# --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω—É–∂–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ---
@bot.message_handler(func=lambda m: "üóì" in m.text)
def send_day_schedule(message):
    date_match = re.search(r"(\d{2}\.\d{2}\.\d{4})", message.text)
    if date_match:
        date_str = date_match.group(1)
        if date_str in lesson_schedules:
            bot.send_document(message.chat.id, lesson_schedules[date_str],
                              caption=f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –Ω–∞ {date_str}")
        else:
            bot.send_message(message.chat.id, f"‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date_str} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –¥–∞—Ç—ã.")

# --- –°–û–† –∏ –°–û–ß –ø–æ–¥–º–µ–Ω—é (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@bot.message_handler(func=lambda m: m.text == "üìò –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –°–û–†")
def show_sor_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(1, 5):
        markup.add(types.KeyboardButton(f"üìò {i}-—á–µ—Ç–≤–µ—Ä—Ç—å"))
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"), types.KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —á–µ—Ç–≤–µ—Ä—Ç—å –¥–ª—è –°–û–†:", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "üìó –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –°–û–ß")
def show_soch_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(1, 5):
        markup.add(types.KeyboardButton(f"üìó {i}-—á–µ—Ç–≤–µ—Ä—Ç—å"))
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"), types.KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —á–µ—Ç–≤–µ—Ä—Ç—å –¥–ª—è –°–û–ß:", reply_markup=markup)

# --- –ö–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" ---
@bot.message_handler(func=lambda m: m.text == "üîô –ù–∞–∑–∞–¥")
def back_to_main(message):
    show_schedule_menu(message)

@bot.message_handler(func=lambda m: m.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def go_home(message):
    start(message)

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª @NIS_TG")
bot.polling(none_stop=True)

